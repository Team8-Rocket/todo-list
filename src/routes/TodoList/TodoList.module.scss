@use '/src/styles/constants/colors';
@use '/src/styles/constants/levels';
@use '/src/styles/mixins/flexbox';
@use '/src/styles/mixins/position';

.todoList {
  position: relative;
  width: 360px;
  height: 720px;
  padding: 120px 0px;
  // padding: 120px 40px 40px;
  background-color: #fafbfe;
  border-radius: 60px;
  overflow: hidden;

  h1 {
    font-size: 32px;
    font-weight: 600;
    color: colors.$BIG_TITLE;
    padding-left: 40px;
  }
  .categoryTitle {
    margin: 30px 0 24px;
    font-size: 12px;
    font-weight: 600;
    color: colors.$TASKS_TITLE;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding-left: 40px;
  }
  .categoriesWrapper {
    height: 100px;
    overflow: scroll;
  }
  .categories {
    // display: flex;
    // background-color: rebeccapurple;
    height: 100px;
  }
  .category {
    float: left;
    line-height: 22px;
    padding: 20px 15px;
    width: 180px;
    height: 100px;
    background-color: colors.$WHITE;
    border-radius: 20px;
    box-shadow: 0 10px 20px 0 rgba(colors.$BLACK, 2%);
    margin-left: 40px;
    cursor: pointer;
    + .category{
      // border: 1px solid red;
      margin-left: 10px;
    }
  }
  .categoriesCount {
    font-size: 12px;
    font-weight: 600;
    color: colors.$TASKS_TITLE;
    letter-spacing: 0.003em;
    margin-bottom: 2px;
  }
  .categoriesTitle {
    font-size: 18px;
    font-weight: 600;
    color: colors.$BIG_TITLE;
    margin-bottom: 10px;
  }
  .progressBar {
    position: relative;
    top: 3px;
    width: 0%;
    height: 3px;
    background-color: red;
    transition: 0.2s;
    box-shadow: 0 3px 5px 0 rgba(colors.$BLACK, 30%);
    >span {
      position: relative;
      top: -4px;
      left: -2px;
      margin-left: 100%;
      display: block;
      width: 2px;
      height: 6px;
      background-color: red;
    }
  }
  .bar{
    width: 100%;
    height:3px;
    background-color: colors.$GRAYE;
  }

  .tasksTitle {
    margin: 30px 0 24px;
    font-size: 12px;
    font-weight: 600;
    color: colors.$TASKS_TITLE;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding-left: 40px;
    >span {
      display: inline-block;
      padding: 0 10px;
      line-height: 20px;
      height: 20px;
      border-radius: 8px;
      margin-left: 4px;
      text-transform: uppercase;
      color: colors.$TASKS_TITLE;
      background-color: colors.$GRAYE;
      letter-spacing: 0.05em;
    }
  }
  .tasks {
    height: 300px;
    overflow-y: scroll;
  }
  .task {
    display: flex;
    align-items: center;
    height: 72px;
    line-height: 72px;
    background-color: colors.$WHITE;
    border-radius: 32px;
    box-shadow: 0 10px 20px 0 rgba(colors.$BLACK, 2%);
    margin: 0 40px;
    transition: 0.2s;
    + .task {
      margin-top: 18px;
    }
    + :last-child{
      margin-bottom: 40px;
    }

    .checkboxWrapper {
      @include flexbox.flexbox(center center);
      position: relative;
      width: 28px;
      height: 28px;
      margin: 0 24px;

      svg {
        @include position.middleBox;
        z-index: levels.$CHECK_ICON;
        color: colors.$WHITE;
        pointer-events: none;
        opacity: 0;
        transition: 0.2s;
      }
    }

    input[type='checkbox'] {
      @include position.middleBox;
      z-index: levels.$CHECK_BOX;
      width: 28px;
      height: 28px;
      cursor: pointer;
      // border: 2px solid colors.$BLUE;
      border-radius: 50%;

      &:checked {
        border: 0;

        ~ svg {
          opacity: 1;
        }
      }
    }

    .title {
      overflow: hidden;
      color: colors.$TASK_ITEM_TITLE;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .addButton {
    @include position.absolute(auto 40px 40px auto);
    width: 66px;
    height: 66px;
    background-color: colors.$BLUE;
    border-radius: 50%;
    box-shadow: 0 10px 20px 0 rgba(colors.$BLACK, 15%);
    transition: 0.2s;

    &:hover {
      background-color: rgba(colors.$BLUE, 90%);
    }

    &::before,
    &::after {
      @include position.middleBox;
      width: 20px;
      height: 2px;
      content: '';
      background-color: colors.$WHITE;
    }

    &::after {
      transform: translate(-50%, -50%) rotate(90deg);
      transform-origin: center;
    }
  }
}
